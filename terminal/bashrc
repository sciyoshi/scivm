export HISTSIZE=
export HISTFILESIZE=
export HISTCONTROL=ignoreboth
export HISTIGNORE='ls:l:ll:la:[bf]g:exit:pwd:clear:mount:umount:cd *'

export EDITOR=nano
export GPG_TTY=$(tty)
export PATH="${HOME}/.local/bin:${HOME}/.cargo/bin:${PATH}"

if command -v exa >/dev/null; then
  LS=exa
else
  LS=ls
fi

alias l="$LS -l --git --group-directories-first"
alias la="$LS -la --git --group-directories-first"
alias ll="$LS -l --git --group-directories-first"

GREEN='\e[1;32m'
CYAN='\e[1;36m'
BLUE='\e[1;34m'
WHITE='\e[1;37m'
YELLOW='\e[1;33m'
RED='\e[1;31m'
RESET='\e[0m'

function git_branch {
  if ! git rev-parse --git-dir > /dev/null 2>&1; then
    return 0
  fi

  local branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')

  echo " ($branch)"
}

function set_bash_prompt {
  if [ -n "$VIRTUAL_ENV" ]; then
    PS1="[\[$YELLOW\]$(basename $VIRTUAL_ENV)\[$RESET\]] \[$GREEN\]\u\[$RESET\]@\[$CYAN\]\h\[$RESET\] \[$BLUE\]\w\[$RESET\]\[$YELLOW\]\$(git_branch) \[$GREEN\]λ\[$RESET\] "
  else
    PS1="\[$GREEN\]\u\[$RESET\]@\[$CYAN\]\h\[$RESET\] \[$BLUE\]\w\[$RESET\]\[$YELLOW\]\$(git_branch) \[$GREEN\]λ\[$RESET\] "
  fi
}

export PROMPT_COMMAND=set_bash_prompt

alias pipup="pip install -e ."
alias pipupu="pip install -e . --upgrade"
alias ntpup="sudo ntpdate -u ntp.ubuntu.com"
alias rmpyc="find . -name \*.pyc -exec rm \{\} \;"

if [ -z ${WORKON_HOME+x} ]; then
  export WORKON_HOME="${HOME}/.local/venvs"
fi

if command -v pip >/dev/null; then
  eval "`pip completion --bash`"
fi

if command -v pew >/dev/null; then
  source $(dirname `pew shell_config`)/complete.bash
fi
