function add_to_path {
  [[ ":$PATH:" != *":$1:"* ]] && export PATH="$1:${PATH}"
}

export HISTSIZE=
export HISTFILESIZE=
export HISTCONTROL=ignoreboth
export HISTIGNORE='ls:l:ll:la:[bf]g:exit:pwd:clear:mount:umount:cd *'

export EDITOR=nano
export GPG_TTY=$(tty)

add_to_path "${HOME}/.local/bin"
add_to_path "${HOME}/.cargo/bin"

if command -v exa >/dev/null; then
  LS=exa
else
  LS=ls
fi

alias l="$LS -l --git --group-directories-first"
alias la="$LS -la --git --group-directories-first"
alias ll="$LS -l --git --group-directories-first"

GREEN='\e[1;32m'
CYAN='\e[1;36m'
BLUE='\e[1;34m'
WHITE='\e[1;37m'
YELLOW='\e[1;33m'
RED='\e[1;31m'
RESET='\e[0m'

if [ -f /usr/local/etc/bash_completion ]; then
  . /usr/local/etc/bash_completion
fi

if [ -f /usr/share/bash-completion/completions/git ]; then
  . /usr/share/bash-completion/completions/git
fi

function_exists() {
  declare -f -F $1 > /dev/null
  return $?
}

for al in `git --list-cmds=alias`; do
  alias g$al="git $al"

  complete_func=_git_$(__git_aliased_command $al)
  function_exists $complete_fnc && __git_complete g$al $complete_func
done

function git_branch {
  if ! git rev-parse --git-dir > /dev/null 2>&1; then
    return 0
  fi

  local branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')

  echo " ($branch)"
}

function set_bash_prompt {
  if [ -n "$VIRTUAL_ENV" ]; then
    PS1="[\[$YELLOW\]$(basename $VIRTUAL_ENV)\[$RESET\]] \[$GREEN\]\u\[$RESET\]@\[$CYAN\]\h\[$RESET\] \[$BLUE\]\w\[$RESET\]\[$YELLOW\]\$(git_branch) \[$GREEN\]λ\[$RESET\] "
  else
    PS1="\[$GREEN\]\u\[$RESET\]@\[$CYAN\]\h\[$RESET\] \[$BLUE\]\w\[$RESET\]\[$YELLOW\]\$(git_branch) \[$GREEN\]λ\[$RESET\] "
  fi
}

export PROMPT_COMMAND=set_bash_prompt

alias dc="docker-compose"

if [ -z ${WORKON_HOME+x} ]; then
  export WORKON_HOME="${HOME}/.local/venvs"
fi

if [ -z ${PIPX_HOME+x} ]; then
  export PIPX_HOME="${HOME}/.local"
fi

if command -v pyenv >/dev/null; then
  eval "$(pyenv init -)"
fi

if command -v pip3 >/dev/null; then
  eval "`pip completion --bash`"
fi

if command -v pew >/dev/null; then
  source $(dirname `pew shell_config`)/complete.bash
fi

export NVM_DIR="$HOME/.config/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
